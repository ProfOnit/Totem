{"version":3,"sources":["config.js","phaser/scenes/gameScene.js","phaser/game.js"],"names":["mapConfig","tileSize","nbTileX","nbTileY","frameRatePlayerAnimation","gameScene","key","anims","create","frameRate","frames","generateFrameNames","start","end","x","player","y","keyboard","Z","isDown","play","S","Q","D","load","image","spritesheet","frameWidth","frameHeight","tilemapCSV","map","make","tilemap","tileWidth","tileHeight","tileset","addTilesetImage","add","input","addKeys","sprite","animation","movementManager","Phaser","Scene","gameConfig","widght","height","parent","type","AUTO","scene","physics","default","game","Game"],"mappings":"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","file":"game.e212df45.js","sourceRoot":"..","sourcesContent":["export const mapConfig = {\r\n    tileSize: 16,\r\n    nbTileX: 50,\r\n    nbTileY: 50\r\n}\r\n\r\nexport const frameRatePlayerAnimation = 10;","import { mapConfig, frameRatePlayerAnimation } from '../../config'\r\n\r\nexport class gameScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: \"Game\",\r\n        });\r\n    }\r\n\r\n    animation() {\r\n        this.anims.create({\r\n            key: 'down',\r\n            frameRate: frameRatePlayerAnimation,\r\n            frames: this.anims.generateFrameNames('player', {start: 0, end: 3})\r\n        });\r\n        this.anims.create({\r\n            key: 'right',\r\n            frameRate: frameRatePlayerAnimation,\r\n            frames: this.anims.generateFrameNames('player', {start: 4, end: 7})\r\n        });\r\n        this.anims.create({\r\n            key: 'left',\r\n            frameRate: frameRatePlayerAnimation,\r\n            frames: this.anims.generateFrameNames('player', {start: 8, end: 11})\r\n        });\r\n        this.anims.create({\r\n            key: 'up',\r\n            frameRate: frameRatePlayerAnimation,\r\n            frames: this.anims.generateFrameNames('player', {start: 12, end: 16})\r\n        });\r\n    }\r\n\r\n    movementManager() {\r\n        let x = this.player.x;\r\n        let y = this.player.y;\r\n        if (this.keyboard.Z.isDown && this.player.y - (mapConfig.tileSize * 2) > 0) {\r\n            y -= mapConfig.tileSize;\r\n            this.player.play(\"up\");\r\n        }\r\n        if (this.keyboard.S.isDown && this.player.y + (mapConfig.tileSize * 2) < mapConfig.tileSize * mapConfig.nbTileY) {\r\n            y += mapConfig.tileSize;\r\n            this.player.play(\"down\");\r\n        }\r\n        if (this.keyboard.Q.isDown && this.player.x - (mapConfig.tileSize * 2) > 0) {\r\n            x -= mapConfig.tileSize;\r\n            this.player.play(\"left\");\r\n        }\r\n        if (this.keyboard.D.isDown && this.player.x + mapConfig.tileSize < mapConfig.tileSize * mapConfig.nbTileX) {\r\n            this.player.play(\"right\");\r\n            x += mapConfig.tileSize;\r\n        }\r\n        this.player.x = x;\r\n        this.player.y = y;\r\n    }\r\n\r\n    preload() {\r\n        this.load.image(\"tile\", \"./assets/tile.png\");\r\n        this.load.image(\"background\", \"./assets/canyon-background.png\");\r\n        this.load.spritesheet(\"player\", \"./assets/player.png\", {frameWidth: 32, frameHeight: 64});\r\n        this.load.tilemapCSV(\"map\", \"./assets/mapFin.csv\");\r\n    }\r\n\r\n    create() {\r\n        var map = this.make.tilemap({\r\n            key: \"map\",\r\n            tileWidth: mapConfig.tileSize,\r\n            tileHeight: mapConfig.tileSize\r\n        });\r\n        var tileset = map.addTilesetImage(\"tile\");\r\n        this.add.image(1920 / 2, 1080 / 2, \"background\");\r\n        //var layer = map.createStaticLayer(0, tileset, 0, 0);\r\n        this.keyboard = this.input.keyboard.addKeys(\"Z, Q, S, D\");\r\n        this.player = this.add.sprite(100, 100, \"player\", 0);\r\n        this.animation();\r\n    }\r\n\r\n    update() {\r\n        this.movementManager();\r\n    }\r\n}","\r\nimport { gameScene } from './scenes/gameScene'\r\nimport { mapConfig } from '../config'\r\n\r\nconst gameConfig = {\r\n    widght: mapConfig.tileSize * mapConfig.nbTileX,\r\n    height: mapConfig.tileSize * mapConfig.nbTileY,\r\n    parent: \"game-container\",\r\n    type: Phaser.AUTO,\r\n    scene: [\r\n        gameScene\r\n    ],\r\n    physics: {\r\n        default: \"arcade\"\r\n    }\r\n}\r\n\r\nvar game = new Phaser.Game(gameConfig);"]}